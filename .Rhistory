library(quantmod) # Load the package
getSymbols("AAPL") # Download daily prices of Apple stock from Yahoo
head(AAPL)
tail(AAPL)
barChart(AAPL)
plot(AAPL$AAPL.Adjusted)
chartSeries(AAPL$AAPL.Adjusted)
install.packages("quantmod")
install.packages("quantmod")
library(quantmod) # Load the package
getSymbols("AAPL") # Download daily prices of Apple stock from Yahoo
head(AAPL)
tail(AAPL)
barChart(AAPL)
plot(AAPL$AAPL.Adjusted)
chartSeries(AAPL$AAPL.Adjusted)
AAPL.rtn = diff(log(AAPL$AAPL.Adjusted))[-1] # Compute log returns
plot(AAPL.rtn)
getSymbols("UNRATE",src="FRED") #Download unemployment rates from FRED.
chartSeries(UNRATE,theme="white")
library(fBasics)
install.packages("fbasics")
y
install.packages("fBasics")
library(fBasics)
basicStats(AAPL.rtn)
# Commands for individual moments
mean(AAPL.rtn)
var(AAPL.rtn)
stdev(AAPL.rtn)
sd(AAPL.rtn)
# Simple tests
t.test(AAPL.rtn) # Testing mean return = 0
hist(AAPL.rtn,nclass=30, breaks = 50,freq = FALSE) # Histogram
x=seq(-.1,.1,.001) # Create a sequence of x with increment 0.001.
# The next command creates normal density
y1=dnorm(x,mean(AAPL.rtn),stdev(AAPL.rtn))
d1=density(AAPL.rtn)
plot(d1$x,d1$y,xlab='ret',ylab='density',type='l',lwd=2)
lines(x,y1,lty=2, col=2, lwd=2)
getSymbols('CPIAUCSL', src = "FRED")
cpi = window(ts(CPIAUCSL, start=c(1947,01), freq=12),
start=c(1994,07))
plot(cpi)
inflation = (cpi/lag(cpi,-1)-1)*100
inflation12 = (cpi/lag(cpi,-12) - 1)*100
plot(inflation)
plot(inflation12)
#install.packages('ecoseries')
library(ecoseries)
install.packages("ecoseries")
#install.packages('ecoseries')
library(ecoseries)
ipca = window(ts(series_ipeadata('36482',
periodicity = 'M')$serie_36482$valor,
start=c(1979,12), freq=12), start=c(1994,07))
plot(ipca)
inflacao = (ipca/lag(ipca,-1)-1)*100
inflacao12 = (ipca/lag(ipca,-12) - 1)*100
plot(inflacao)
plot(inflacao12)
library(tseries)
acf(cpi)
acf(ipca)
adf.test(cpi)
adf.test(ipca)
adf.test(cpi)
acf(inflation)
require(dplyr)
library(readxl)
library(httr)
library(forecast)
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-",format(Sys.time(), "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
GET(url, authenticate(":", ":", type="ntlm"), write_disk(tf <- tempfile(fileext = ".xlsx")))
data <- read_excel(tf)
br = data[data$`countriesAndTerritories` %in% c('Brazil'),]
br = br %>% arrange(-row_number())
ts.plot(br$cases, lwd=2)
br_cases = cumsum(br$cases)[cumsum(br$cases)>0]
br_deaths = cumsum(br$deaths)[cumsum(br$deaths)>0]
ts.plot(br_cases, main='Cases', ylab='', lwd=2)
ts.plot(br_deaths, main='Deaths', ylab='',lwd=2)
br_case_lag <-  (br_cases/lag(br_cases,-1)-1)*100
br_deaths_lag = (br_deaths/lag(br_deaths,-12) - 1)*100
br_case_lag <-  (br_cases/lag(br_cases,-1)-1)*100
adf.test(br_cases)
dif_cases = diff(br_cases)
adf.test(dif_cases)
dif_dif_cases <- diff(dif_cases)
adf.test(dif_dif_cases)
adf.test(br_deaths)
par(mfrow=c(1,1))
plot(co2)
acf(co2)
par(mfrow=c(1,1))
plot(co2)
adf.test(br_deaths)
dif_deaths <-  diff(br_deaths)
adf.test(dif_deaths)
dif_dif_deaths <- diff(dif_deaths)
adf.test(dif_dif_deaths)
par(mfrow=c(1,1))
plot(co2)
acf(co2)
adf.test(co2)
adf.test(diff(co2))
# Decomposição entre erro, tendência e sazonalidade
plot(decompose(co2, type = "mult"))
co2_decom <- decompose(co2, type = "mult")
co2_trend = co2_decom$trend
co2_seasonal <- co2_decom$seasonal
ts.plot(cbind(co2_trend, co2_trend * co2_seasonal), lty = 1:2, col=1:2,lwd=2)
vendas = read.csv('Downloads/PMC.csv', header = TRUE, sep=';')
vendas = read.csv('C:Users/cs88416/Downloads/PMC.csv', header = TRUE, sep=';')
vendas = read.csv('PMC.csv', header = TRUE, sep=';')
vendas = ts(vendas[,2], start = c(2003,01), frequency = 12)
par(mfrow=c(1,1))
plot(vendas, col=2)
vendas_decomp <- decompose(vendas, type = "mult")
plot(vendas_decomp)
adf.test(vendas)
adf.test(diff(vendas))
acf(vendas)
acf(diff(vendas))
library(forecast)
# Decomposição entre erro, tendência e sazonalidade
plot(decompose(vendas, type = "mult"))
plot(decompose(vendas, type = "add"))
vendas_decom <- decompose(vendas, type = "mult")
plot(vendas_decom)
vendas_trend = vendas_decom$trend
vendas_seasonal <- vendas_decom$seasonal
ts.plot(cbind(vendas_trend, vendas_trend * vendas_seasonal), lty = 1:2, col=1:2, lwd=2)
vendas_yoy = vendas/Lag(vendas,-12) - 1
plot(vendas_yoy, col=4, lwd=2, main = 'Vendas no Varejo - % YoY', ylab='')
abline(h=0 , lty=2)
acf(vendas_yoy)
adf.test(vendas_yoy)
vendas_mom = vendas/Lag(vendas,-1) - 1
plot(vendas_mom, col=4, lwd=2, main = 'Vendas no Varejo - % MoM', ylab='')
abline(h=0 , lty=2, lwd=2)
acf(vendas_mom)
adf.test(vendas_mom)
set.seed(123)
x <- .5*c(1:200)+rnorm(200,0,.25)
X <- .5*c(1:200)+rnorm(200,0,.25)
y <- numeric(200)
y0 <- 0
y[1] <- 0.5 + y0 + rnorm(1,0,.25)
